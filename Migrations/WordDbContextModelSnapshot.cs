// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WordList.Data.Sql;

#nullable disable

namespace WordList.Data.Sql.Migrations
{
    [DbContext(typeof(WordDbContext))]
    partial class WordDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WordList.Data.Sql.Models.Word", b =>
                {
                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<int>("Commonness")
                        .HasColumnType("integer");

                    b.Property<int>("Offensiveness")
                        .HasColumnType("integer");

                    b.Property<int>("Sentiment")
                        .HasColumnType("integer");

                    b.HasKey("Text")
                        .HasName("words");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("WordList.Data.Sql.Models.WordType", b =>
                {
                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Text")
                        .HasName("types");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("WordWordType", b =>
                {
                    b.Property<string>("WordTypesText")
                        .HasColumnType("text");

                    b.Property<string>("WordsText")
                        .HasColumnType("text");

                    b.HasKey("WordTypesText", "WordsText");

                    b.HasIndex("WordsText");

                    b.ToTable("WordWordType");
                });

            modelBuilder.Entity("WordWordType", b =>
                {
                    b.HasOne("WordList.Data.Sql.Models.WordType", null)
                        .WithMany()
                        .HasForeignKey("WordTypesText")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WordList.Data.Sql.Models.Word", null)
                        .WithMany()
                        .HasForeignKey("WordsText")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
